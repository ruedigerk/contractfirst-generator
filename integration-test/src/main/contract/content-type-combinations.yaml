openapi: "3.0.0"
info:
  version: 1.0.0
  title: Contract for testing various combinations of content types. 
servers:
  - url: https://example.com/content-type-combinations/
paths:
  /defaultOnly:
    get:
      summary: Test case for only having a response with status code "default".
      operationId: getDefaultOnly
      tags:
        - ContentTypeCombinations
      parameters:
        - name: testCaseSelector
          in: header
          schema:
            type: string
      responses:
        default:
          description: The one response definition with status "default".
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"

  /successOnly:
    get:
      summary: Test case for only having a single successful response.
      operationId: getSuccessOnly
      tags:
        - ContentTypeCombinations
      responses:
        200:
          description: The single response, successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"

  /failureOnly:
    get:
      summary: Test case for only having a single failure response.
      operationId: getFailureOnly
      tags:
        - ContentTypeCombinations
      responses:
        400:
          description: The single response, being a failure.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CtcError"
                
  /successEntityAndErrorDefault:
    get:
      summary: Test case for having one successful response with an entity and a default for all errors.
      operationId: getSuccessEntityAndErrorDefault
      tags:
        - ContentTypeCombinations
      parameters:
        - name: testCaseSelector
          in: header
          schema:
            type: string
      responses:
        200:
          description: Success is a book.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        default:
          description: Default is failure.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CtcError"
                
  /multipleSuccessEntities:
    get:
      summary: Test case for having multiple success entity types.
      operationId: getMultipleSuccessEntities
      tags:
        - ContentTypeCombinations
      parameters:
        - name: testCaseSelector
          in: header
          schema:
            type: string
      responses:
        200:
          description: Success is a book.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        201:
          description: Success is also a failure.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CtcError"
                
  /multipleSuccessResponsesWithoutContent:
    get:
      summary: Test case for having multiple successful responses without content.
      operationId: getMultipleSuccessResponsesWithoutContent
      tags:
        - ContentTypeCombinations
      parameters:
        - name: testCaseSelector
          in: header
          schema:
            type: string
      responses:
        200:
          description: 200 without content.
        204:
          description: 204 also without content.
                
  /multipleErrorEntities:
    get:
      summary: Test case for having multiple error entity types.
      operationId: getMultipleErrorEntities
      tags:
        - ContentTypeCombinations
      parameters:
        - name: testCaseSelector
          in: header
          schema:
            type: string
      responses: 
        200:
          description: Success is a book.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        400:
          description: Error with CtcError entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CtcError"
        500:
          description: Error with SevereCtcError entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SevereCtcError"

  /contentFor204:
    get:
      summary: Test case for returning content with status code 204.
      operationId: getContentFor204
      tags:
        - ContentTypeCombinations
      responses:
        204:
          description: Status 204, returning content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"

components:
  schemas:
    Book:
      properties:
        title:
          type: string
        isbn:
          type: string
    CtcError:
      properties:
        code:
          type: string
    SevereCtcError:
      properties:
        code:
          type: integer
          
  responses:
    DefaultFailures:
      description: Some other error, like 500.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CtcError"
