<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>de.rk42.openapi-codegen</groupId>
   <artifactId>openapi-codegen</artifactId>
   <version>1.0-SNAPSHOT</version>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

      <maven.javadoc.skip>true</maven.javadoc.skip>
      <target-jdk.version>8</target-jdk.version>
      <kotlin.version>1.5.20</kotlin.version>
      <groovy.version>2.5.13</groovy.version>

      <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
      <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
      <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
      <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
      <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
      <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
      <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
      <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
      <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
      <maven-scm-provider-jgit.version>1.10.0</maven-scm-provider-jgit.version>
      <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
      <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>

      <gmavenplus-plugin.version>1.12.1</gmavenplus-plugin.version>
   </properties>

   <build>
      <pluginManagement>
         <plugins>
            <plugin>
               <!-- Configure release option (available since Java 9) -->
               <artifactId>maven-compiler-plugin</artifactId>
               <version>${maven-compiler-plugin.version}</version>
               <configuration>
                  <release>${target-jdk.version}</release>
               </configuration>
            </plugin>

            <plugin>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>${maven-surefire-plugin.version}</version>
            </plugin>

            <plugin>
               <artifactId>maven-failsafe-plugin</artifactId>
               <version>${maven-failsafe-plugin.version}</version>
            </plugin>

            <plugin>
               <!-- Groovy-Plugin for testing with Spock -->
               <groupId>org.codehaus.gmavenplus</groupId>
               <artifactId>gmavenplus-plugin</artifactId>
               <version>${gmavenplus-plugin.version}</version>
               <executions>
                  <execution>
                     <goals>
                        <goal>addTestSources</goal>
                        <goal>compileTests</goal>
                     </goals>
                  </execution>
               </executions>
               <configuration>
                  <testSources>
                     <testSource>
                        <!-- So IDEA recognizes "src/test/groovy" as test source. -->
                        <directory>${project.basedir}/src/test/groovy</directory>
                        <includes>
                           <include>**/*.groovy</include>
                        </includes>
                     </testSource>
                  </testSources>
               </configuration>
            </plugin>

            <!-- Define Versions of the Apache-Maven-Plugins -->
            <plugin>
               <artifactId>maven-clean-plugin</artifactId>
               <version>${maven-clean-plugin.version}</version>
            </plugin>
            <plugin>
               <artifactId>maven-dependency-plugin</artifactId>
               <version>${maven-dependency-plugin.version}</version>
            </plugin>
            <plugin>
               <artifactId>maven-deploy-plugin</artifactId>
               <version>${maven-deploy-plugin.version}</version>
            </plugin>
            <plugin>
               <artifactId>maven-install-plugin</artifactId>
               <version>${maven-install-plugin.version}</version>
            </plugin>
            <plugin>
               <artifactId>maven-jar-plugin</artifactId>
               <version>${maven-jar-plugin.version}</version>
            </plugin>
            <plugin>
               <artifactId>maven-resources-plugin</artifactId>
               <version>${maven-resources-plugin.version}</version>
            </plugin>
         </plugins>
      </pluginManagement>

      <plugins>
         <plugin>
            <!-- Kotlin compiler plugin needs to run before Java compiler plugin -->
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-plugin</artifactId>
            <version>${kotlin.version}</version>
            <executions>
               <execution>
                  <id>compile</id>
                  <goals>
                     <goal>compile</goal>
                  </goals>
                  <configuration>
                     <sourceDirs>
                        <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                     </sourceDirs>
                  </configuration>
               </execution>
            </executions>
            <configuration>
               <args>
                  <!-- Progressive mode for the Kotlin compiler: https://kotlinlang.org/docs/compiler-reference.html#progressive -->
                  <arg>-progressive</arg>
               </args>
            </configuration>
         </plugin>

         <plugin>
            <!-- Java compiler needs to run after Kotlin compiler, see https://kotlinlang.org/docs/maven.html#compile-kotlin-and-java-sources -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
               <execution>
                  <!-- Replacing default-compile as it is treated specially by maven -->
                  <id>default-compile</id>
                  <phase>none</phase>
               </execution>
               <execution>
                  <!-- Replacing default-testCompile as it is treated specially by maven -->
                  <id>default-testCompile</id>
                  <phase>none</phase>
               </execution>
               <execution>
                  <id>java-compile</id>
                  <phase>compile</phase>
                  <goals>
                     <goal>compile</goal>
                  </goals>
               </execution>
               <execution>
                  <id>java-test-compile</id>
                  <phase>test-compile</phase>
                  <goals>
                     <goal>testCompile</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <!-- Groovy-Plugin for testing with Spock -->
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
         </plugin>
      </plugins>
   </build>

   <dependencyManagement>
      <dependencies>
         <!-- Define the versions of the various Groovy-Dependencies -->
         <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>${groovy.version}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-json</artifactId>
            <version>${groovy.version}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-nio</artifactId>
            <version>${groovy.version}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-macro</artifactId>
            <version>${groovy.version}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-templates</artifactId>
            <version>${groovy.version}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-test</artifactId>
            <version>${groovy.version}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-sql</artifactId>
            <version>${groovy.version}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-xml</artifactId>
            <version>${groovy.version}</version>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <!-- #################### -->
      <!-- Compile dependencies -->
      <!-- #################### -->
      <dependency>
         <!-- Kotlin standard library for JDK 8+ -->
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-stdlib-jdk8</artifactId>
         <version>${kotlin.version}</version>
      </dependency>
      <dependency>
         <!-- For reading command line arguments -->
         <groupId>com.xenomachina</groupId>
         <artifactId>kotlin-argparser</artifactId>
         <version>2.0.7</version>
      </dependency>
      <dependency>
         <!-- For parsing OpenAPI specifications -->
         <groupId>io.swagger.parser.v3</groupId>
         <artifactId>swagger-parser</artifactId>
         <version>2.0.25</version>
      </dependency>
      <dependency>
         <!-- For serializing YAML output -->
         <groupId>com.fasterxml.jackson.dataformat</groupId>
         <artifactId>jackson-dataformat-yaml</artifactId>
         <version>2.12.3</version>
      </dependency>
      <dependency>
         <!-- For generating Java source files -->
         <groupId>com.squareup</groupId>
         <artifactId>javapoet</artifactId>
         <version>1.13.0</version>
      </dependency>
      <dependency>
         <!-- For Logging -->
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
         <version>1.2.3</version>
      </dependency>

      <!-- ################# -->
      <!-- Test dependencies -->
      <!-- ################# -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.13.2</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.codehaus.groovy</groupId>
         <artifactId>groovy</artifactId>
         <version>${groovy.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- For testing with Spock -->
         <groupId>org.spockframework</groupId>
         <artifactId>spock-core</artifactId>
         <version>1.3-groovy-2.5</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Allows mocking of classes in Spock (in addition to interfaces). -->
         <groupId>net.bytebuddy</groupId>
         <artifactId>byte-buddy</artifactId>
         <version>1.11.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Allows mocking of classes without default constructor in Spock (together with ByteBuddy). -->
         <groupId>org.objenesis</groupId>
         <artifactId>objenesis</artifactId>
         <version>3.2</version>
         <scope>test</scope>
      </dependency>

      <!-- Dependencies of the generated Code -->
      <dependency>
         <groupId>javax.ws.rs</groupId>
         <artifactId>javax.ws.rs-api</artifactId>
         <version>2.1.1</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>javax.validation</groupId>
         <artifactId>validation-api</artifactId>
         <version>1.1.0.Final</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.google.code.gson</groupId>
         <artifactId>gson</artifactId>
         <version>2.8.7</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

</project>
